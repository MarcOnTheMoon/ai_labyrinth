<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="15.1">
  <help_text>// Uncomment the following line to change the fontsize and font:
fontsize=10
// fontfamily=SansSerif //possible: SansSerif,Serif,Monospaced


//////////////////////////////////////////////////////////////////////////////////////////////
// Welcome to UMLet!
//
// Double-click on elements to add them to the diagram, or to copy them
// Edit elements by modifying the text in this panel
// Hold Ctrl to select multiple elements
// Use Ctrl+mouse to select via lasso
//
// Use +/- or Ctrl+mouse wheel to zoom
// Drag a whole relation at its central square icon
//
// Press Ctrl+C to copy the whole diagram to the system clipboard (then just paste it to, eg, Word)
// Edit the files in the "palettes" directory to create your own element palettes
//
// Select "Custom Elements &gt; New..." to create new element types
//////////////////////////////////////////////////////////////////////////////////////////////


// This text will be stored with each diagram;  use it for notes.</help_text>
  <zoom_level>12</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>204</x>
      <y>468</y>
      <w>132</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>gymnasium::Env
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>204</x>
      <y>576</y>
      <w>540</w>
      <h>468</h>
    </coordinates>
    <panel_attributes>LabyrinthEnv
--
_+ metadata: Dict_
- __actions_dt: float
- __physics_dt: float
- __physics_steps_per_action: int
- __last_action_timestamp_sec: float
- __geometry: Geometry
- ____rewards_rules: RewardsByAreas
- __x_degree: float
- __y_degree: float
- __ball_physics: BallPhysics
- __ball_start_position: np::float32[2]
- __ball_position: np::float32[2]
- __destination_x: list
- __destination_y: list
- __render_mode: String
- __render_3d: LabyrinthRender3D
- __observation_space: space.Box
- __action_to_angle_degree: list
- __last_ball_position: np::float32[2]
- __number_actions: int
- __max_number_actions: int
+ num_actions_per_component: int
--
- __init__(layout: Layout, render_mode="3D": String, actions_dt=0.1: float, physics_dt=0.01: float)
- __get_observation()
- __render()
- __is_near_hole(): boolean
+ reset(): numpy.ndarray, None
+ step(action: int): numpy.ndarray, float, boolean, boolean, dict</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>924</x>
      <y>960</y>
      <w>204</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>LabLayouts::Geometry
--
_+ start_area: List_
_+ start_positions: Dict_
_+ destinations_xy: Dict_
+ layout: Layout
+ box: Box
+ field: Field
+ walls: Walls
+ holes: Holes
+ ball: Ball
--
- __init__(layout: Layout)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>732</x>
      <y>1164</y>
      <w>216</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=1</panel_attributes>
    <additional_attributes>10.0;10.0;160.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1068</x>
      <y>1272</y>
      <w>540</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>LabLayouts::Box
--
+ height: float
+ boarder: float
+ wheel_radius: float
+ wheel_depth: float
--
- __init__(height=9.5: float, boarder=0.8: float, wheel_radius=1.7: float, wheel_depth=1.5: float)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>840</x>
      <y>504</y>
      <w>768</w>
      <h>360</h>
    </coordinates>
    <panel_attributes>Render3D
--
_+ colors: Dict_
- __scene: vpython::scene
- __ball_radius: float
- __ball_position: vpython::vector
- __ball: vpython::sphere
- __x_degree: float
- __y_degree: float
- __axis_x: vpython::vector
- __axis_y: vpython::vector
- __labyrinth: vpython::compound
--
- __init__(geometry: Geometry, scene_width=800: float, scene_height=600: float, scene_range=20: float, ball_position=None: np::float32[2])
- __render_scene(geometry: Geometry)
- __render_box(geometry: Geometry)
- __render_field(geometry: Geometry)
- __render_ball(x: float, y: float)
+ ball_visibility(visible: boolean)
+ move_ball(x: float, y: float)
+ rotate_by(x_degree=None: float, y_degree=None: float)
+ rotate_to(x_degree=None: float, y_degree=None: float)
+ get_x_rad()
+ get_y_rad()
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1212</x>
      <y>888</y>
      <w>396</w>
      <h>132</h>
    </coordinates>
    <panel_attributes>LabLayouts::Field
--
+ size_x: float
+ size_y: float
+ plate_depth: float
+ rotation_x_deg=0.0: float
+ rotation_y_deg=0.0: float
--
- __init__(size_x=27.4: float, size_y=22.8: float, plate_depth=0.3: float)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>852</x>
      <y>1272</y>
      <w>180</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>LabLayouts::Ball
--
+ radius: float
--
- __init__(radius=0.635: float)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1020</x>
      <y>852</y>
      <w>96</w>
      <h>132</h>
    </coordinates>
    <panel_attributes>lt=-
initializes ^</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>732</x>
      <y>660</y>
      <w>132</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1
m2=0..1</panel_attributes>
    <additional_attributes>10.0;10.0;90.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>264</x>
      <y>1116</y>
      <w>480</w>
      <h>336</h>
    </coordinates>
    <panel_attributes>BallPhysics
--
- __position: np::float32[2]
- __velocity: np::float32[2]
- __x_rad: float
- __y_rad: float
- __5_7g: float
- __urr: float
- __urr_edge: float
- __geometry: Geometry
- __corners: list
+ dt: float
+ is_ball_in_hole: boolean
--
- __init__(geometry: Geometry, dt: float)
- __init_corners()
- __step(x_rad: float, y_rad: float)
- __detection_and_process_collision()
- __detect_ball_in_hole()
+ get_velocity()
+ set_position(position: np::float32[2])
+ reset(position: np::float32[2])
+ step(x_rad: float, y_rad: float, number_steps=1: int, position=None: np::float32[2])
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>492</x>
      <y>1032</y>
      <w>36</w>
      <h>108</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=1</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1212</x>
      <y>1032</y>
      <w>396</w>
      <h>108</h>
    </coordinates>
    <panel_attributes>LabLayouts::Walls
--
+ thickness: float
+ height: float
+ data: Dict
--
- __init__(layout: String, thickness=0.58: float, height=0.6: float)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1212</x>
      <y>1152</y>
      <w>396</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>LabLayouts::Holes
--
+ radius: float
+ data: Dict
--
- __init__(layout: String, radius=0.75: float, depth=0.3: float) </panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>84</x>
      <y>288</y>
      <w>684</w>
      <h>156</h>
    </coordinates>
    <panel_attributes>LabRewards::RewardsByAreas
--
--
- __init__(layout: Layout)
+ step(state: np::float[6], action: int, next_state: np::float[6], is_near_hole: bool, is_in_hole: bool, is_at_destination: bool): int
- __distances_from_target_point(state: np::float[6], next_state: np::float[6]): float, float
- __reward_for_layout_0_holes(distance: float): int
- __areas(layout: Layout): float[4][ ]
- __target_points(layout: Layout): float[2][ ]
- __init_reward_values(layout: Layout)
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>444</x>
      <y>432</y>
      <w>36</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=1</panel_attributes>
    <additional_attributes>10.0;120.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>252</x>
      <y>492</y>
      <w>36</w>
      <h>108</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1116</x>
      <y>972</y>
      <w>120</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=1</panel_attributes>
    <additional_attributes>10.0;10.0;80.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1116</x>
      <y>1068</y>
      <w>120</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=1</panel_attributes>
    <additional_attributes>10.0;10.0;80.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1116</x>
      <y>1164</y>
      <w>120</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=1</panel_attributes>
    <additional_attributes>10.0;10.0;80.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>960</x>
      <y>1188</y>
      <w>36</w>
      <h>108</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=1</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1092</x>
      <y>1188</y>
      <w>36</w>
      <h>108</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=1</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>732</x>
      <y>996</y>
      <w>216</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=1</panel_attributes>
    <additional_attributes>10.0;10.0;160.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>840</x>
      <y>300</y>
      <w>300</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>AgentDQN
--

--
- __init_q_net(state_size, action_size)
+ decay_epsilon()
+ select_action(state, mode='train'): int
+ step(state, action, reward, next_state, done)
+ save(path)
+ load(path)
- __batch_temporal_difference_step()
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>684</x>
      <y>456</y>
      <w>180</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=1</panel_attributes>
    <additional_attributes>130.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>84</x>
      <y>120</y>
      <w>684</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>/Rewards/
{abstract}
--

--
/- __init__(layout: Layout)/
/+ step(state: np::float[6], action: int, next_state: np::float[6], is_near_hole: bool, is_in_hole: bool, is_at_destination: bool): int/
+ reset()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>780</x>
      <y>1368</y>
      <w>252</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>Layout
--
_+ HOLES_0_VIRTUAL_
_+ HOLES_2_VIRTUAL_
_+ HOLES_0_
_+ HOLES_2_
_+ HOLES_8_
_+ HOLES_21_
+ number_holes: int
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>420</x>
      <y>228</y>
      <w>36</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1224</x>
      <y>324</y>
      <w>312</w>
      <h>156</h>
    </coordinates>
    <panel_attributes>ReplayBuffer
--
- __memory: deque
- __batch_size: int
- __experience: namedtuple
--
- __init__(self, buffer_size, batch_size)
+ add(self, state, action, reward, next_state, done)
+ get_random_batch()
- __len__(): int</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1224</x>
      <y>180</y>
      <w>456</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>QNet
--

--
- __init__(state_size, action_size, fc1_units=4096, fc2_units=2048, fc3_units=512)
+ forward(state)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1380</x>
      <y>96</y>
      <w>132</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>torch::nn:Module
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1440</x>
      <y>120</y>
      <w>36</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1128</x>
      <y>396</y>
      <w>120</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=1</panel_attributes>
    <additional_attributes>10.0;10.0;80.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1128</x>
      <y>252</y>
      <w>120</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=1</panel_attributes>
    <additional_attributes>10.0;40.0;80.0;10.0</additional_attributes>
  </element>
</diagram>
