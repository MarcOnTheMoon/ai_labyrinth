<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="15.0.0">
  <zoom_level>6</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>150</x>
      <y>0</y>
      <w>84</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>gymnasium::Env
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>66</x>
      <y>48</y>
      <w>252</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>LabyrinthEnvironmentPrototype
--

--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>186</x>
      <y>18</y>
      <w>18</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>348</x>
      <y>276</y>
      <w>210</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=1</panel_attributes>
    <additional_attributes>10.0;20.0;320.0;20.0;320.0;30.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>378</x>
      <y>30</y>
      <w>258</w>
      <h>204</h>
    </coordinates>
    <panel_attributes>ServoCommunication
--

--

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>66</x>
      <y>264</y>
      <w>288</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>App
--
- __framePeriodsMs=100: int
- __isShowImageAnalysis: boolean
- __ballCenter: list
- __ballRadius: int
+ imaging: Imaging
+ gui: GUI
--
- __init__(cameraID=1: int,fps=10: int, isShowImageAnalysis=True: boolean)
+ close(): None
+ run(): None
+ processNextFrame(): numpy.ndarray, float[2], float
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>186</x>
      <y>222</y>
      <w>24</w>
      <h>54</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=1</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>312</x>
      <y>102</y>
      <w>78</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=1</panel_attributes>
    <additional_attributes>10.0;30.0;110.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>414</x>
      <y>294</y>
      <w>294</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>Imaging
--
- __blobDetector: cv2.SimpleBlobDetector
+ acquisition: ImageAcquisition
+ threshold = 125: int
+ frame: numpy.ndarray
+ image: numpy.ndarray
--
- __init__(cameraID: int)
- __initBlobDetector(minArea=100: int, maxArea:1750: int,
                                 minCircularity=0,6: float, maxCircularity=1.0: float): None
- __thresholdDilate(srcImage: numpy.ndarray): numpy.ndarray
- __blobDetection(binImage: numpy.ndarray): numpy.ndarray, float[2], float
+ close(): None
+ nextFrame(): numpy.ndarray, numpy.ndarray
+ detectBall(): numpy.ndarray, float[2], float
+ drawCircle(image: numpy.ndarray, center: float[2], radius: float, color: int[3], 
                     thickness: int): numpy.ndarray
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>48</x>
      <y>432</y>
      <w>324</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>GUI
--
- __app: App
--
- __init__(app: App)
- __close(): None
+ onMouseClick(event, x: int, y: int, flags, param:App): None
+ onTrackbarThreshold(value: int): None
+ showImages(cameraFrame: numpy.ndarray, labyrinthImage: numpy.ndarray): None
+ showImage(windowName: String, image: numpy.ndarray): None</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>204</x>
      <y>378</y>
      <w>24</w>
      <h>66</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=1</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>384</x>
      <y>498</y>
      <w>336</w>
      <h>126</h>
    </coordinates>
    <panel_attributes>ImageAcquisition
--
- __camera: Camera
- __field: Dict
- __transformMatrix: numpy.ndarray
+ frame: numpy.ndarray
+ fieldImage: numpy.ndarray
--
- __init__(camera=1: int, width=3*274: int, height=3*228: int, isRotate180=True: boolean)
- __updatePerspectiveTransformation(): None
+ close(): None
+ changeSourceCorner(x: int, y: int): None
+ nextFrame(isDrawSourceROI=True: boolean): numpy.ndarray, numpy.ndarray
+ getfield(): int, int</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>546</x>
      <y>456</y>
      <w>24</w>
      <h>54</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=1</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>108</x>
      <y>564</y>
      <w>252</w>
      <h>78</h>
    </coordinates>
    <panel_attributes>Camera
--
- __camera: cv2.VideoCapture
+ width: float
+ height: float
--
- __init__(cameraID=1: int)
+ close():None
+ nextFrame(): numpy.ndarray
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>234</x>
      <y>534</y>
      <w>162</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=1</panel_attributes>
    <additional_attributes>250.0;10.0;10.0;10.0;10.0;50.0</additional_attributes>
  </element>
</diagram>
