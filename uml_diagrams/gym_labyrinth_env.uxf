<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="15.0.0">
  <help_text>// Uncomment the following line to change the fontsize and font:
fontsize=10
// fontfamily=SansSerif //possible: SansSerif,Serif,Monospaced


//////////////////////////////////////////////////////////////////////////////////////////////
// Welcome to UMLet!
//
// Double-click on elements to add them to the diagram, or to copy them
// Edit elements by modifying the text in this panel
// Hold Ctrl to select multiple elements
// Use Ctrl+mouse to select via lasso
//
// Use +/- or Ctrl+mouse wheel to zoom
// Drag a whole relation at its central square icon
//
// Press Ctrl+C to copy the whole diagram to the system clipboard (then just paste it to, eg, Word)
// Edit the files in the "palettes" directory to create your own element palettes
//
// Select "Custom Elements &gt; New..." to create new element types
//////////////////////////////////////////////////////////////////////////////////////////////


// This text will be stored with each diagram;  use it for notes.</help_text>
  <zoom_level>5</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>415</x>
      <y>100</y>
      <w>55</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>gymnasium::Env
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>325</x>
      <y>135</y>
      <w>140</w>
      <h>230</h>
    </coordinates>
    <panel_attributes>LabyrinthEnv
--
_+ metadata: Dict_
- __actions_dt: float
- __physics_dt: float
- __physics_steps_per_action: int
- __last_action_timestamp_sec: float
- __geometry: LabyrinthGeometry
- __rewardarea: LabyrinthRewardArea
- __x_degree: float
- __y_degree: float
- __ball_physics: LabyrinthBallPhysics
- __ball_start_position: vpython::vector
- __ball_position: vpython::vector 
- __destination_x: list
- __destination_y: list
- __render_mode: String
- __render_3d: LabyrinthRender3D
- __observation_space: space.Box
- __action_to_angle_degree: list
- __last_ball_position: vpython::vector 
- __number_actions: int
- __interim_reward_counter: int
- __progress: int
- __right_direction: boolean
- __last_distance: float
- __current_distance: float
+ self.num_actions_per_component: int
--
- __init__(layout: String, render_mode="3D": String, 
                actions_dt=0.1: float, physics_dt=0.01: float)
- __render(): None
- __interim_reward(): boolean
- __threshold_reward(): signed int
- __zerohole_reward(): int
- __close_hole_discount(): boolean
+ reset(): numpy.ndarray, None
+ step(action: int): numpy.ndarray, int, boolean, boolean, int</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>475</x>
      <y>335</y>
      <w>80</w>
      <h>85</h>
    </coordinates>
    <panel_attributes>LabyrinthGeometry
--
_+ layouts: list_
_+ area_start: list_
_+ start_positions: Dict_
_+ destinations_xy: Dict_
+ layout: String
+ box: Box
+ field: Field
+ walls: Walls
+ holes: Holes
+ ball: Ball
--
- __init__(layout='8 holes': String)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>445</x>
      <y>400</y>
      <w>40</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=1</panel_attributes>
    <additional_attributes>10.0;10.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>460</x>
      <y>480</y>
      <w>135</w>
      <h>55</h>
    </coordinates>
    <panel_attributes>LabyrinthGeometry::Box
--
+ height: float
+ boarder: float
+ wheel_radius: float
+ wheel_depth: float
--
- __init__(height=9.5: float, boarder=0.8: float, 
			                wheel_radius=1.7: float, wheel_depth=1.5: float)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>490</x>
      <y>125</y>
      <w>150</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>LabyrinthRender3D
--
_+ colors: Dict_
- __scene: vpython::scene
- __ball_radius: float
- __ball_position: vpython::vector
- __ball: vpython::sphere
- __x_degree: float
- __y_degree: float
- __axis_x: vpython::vector
- __axis_y: vpython::vector
- __labyrinth: vpython::compound
--
- __init__(geometry: LabyrinthGeometry, scene_width=800: float, 
                scene_height=600: float, scene_range=20: float, 
                ball_position=None: vpython::vector)
- __render_scene(geometry: LabyrinthGeometry)
- __render_box(geometry: LabyrinthGeometry)
- __render_field(geometry: LabyrinthGeometry)
- __render_ball(x: float, y: float)
+ ball_visibility(visible: boolean)
+ move_ball(x: float, y: float)
+ rotate_by(x_degree=None: float, y_degree=None: float)
+ rotate_to(x_degree=None: float, y_degree=None: float)
+ get_x_rad()
+ get_y_rad()
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>575</x>
      <y>295</y>
      <w>110</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>LabyrinthGeometry::Field
--
+ size_x: float
+ size_y: float
+ plate_depth: float
+ rotation_x_deg=0.0: float
+ rotation_y_deg=0.0: float
--
- __init__(size_x=27.4: float, size_y=22.8: float, 
		              	  plate_depth=0.3: float)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>615</x>
      <y>470</y>
      <w>70</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>LabyrinthGeometry::Ball
--
+ radius: float
--
- __init__(radius=0.635: float)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>515</x>
      <y>280</y>
      <w>40</w>
      <h>65</h>
    </coordinates>
    <panel_attributes>lt=-
initializes ^</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;110.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>460</x>
      <y>145</y>
      <w>40</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1
m2=0..1</panel_attributes>
    <additional_attributes>10.0;10.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>325</x>
      <y>390</y>
      <w>125</w>
      <h>145</h>
    </coordinates>
    <panel_attributes>LabyrinthBallPhysics
--
- __position: vpython::vector
- __velocity: vpython::vector
- __x_rad: float
- __y_rad: float
- __5_7g: float
- __urr: float
- __urr_edge: float
- __geometry: LabyrinthGeometry
- __corners: list
+ dt: float
+ is_ball_in_hole: boolean
--
- __init__(geometry: LabyrinthGeometry, dt: float)
- __init_corners()
- __step(x_rad: float, y_rad: float)
- __detection_and_process_collision()
- __detect_ball_in_hole()
+ get_velocity()
+ set_position(position: vpython::vector)
+ reset(position: vpython::vector)
+ step(x_rad: float, y_rad: float, number_steps=1: int, 
           position=None: vpython::vector)
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>385</x>
      <y>360</y>
      <w>15</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=1</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>575</x>
      <y>365</y>
      <w>110</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>LabyrinthGeometry::Walls
--
+ thickness: float
+ height: float
+ data: Dict
--
- __init__(layout: String, thickness=0.58: float,
			                height=0.6: float)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>585</x>
      <y>420</y>
      <w>100</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>LabyrinthGeometry::Holes
--
+ radius: float
+ data: Dict
--
- __init__(layout: String, radius=0.75: float,
			                depth=0.3: float) </panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>325</x>
      <y>75</y>
      <w>60</w>
      <h>55</h>
    </coordinates>
    <panel_attributes>LabyrinthRewardArea
--
- __layout: String
+ taget_points: list
+ areas: list
+ threshold_rewards: list
+ reward_dict: Dict
--
- __init__(layout: String)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>380</x>
      <y>100</y>
      <w>25</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=1</panel_attributes>
    <additional_attributes>30.0;70.0;30.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>440</x>
      <y>110</y>
      <w>15</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>550</x>
      <y>320</y>
      <w>35</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=1</panel_attributes>
    <additional_attributes>10.0;60.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>550</x>
      <y>380</y>
      <w>35</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=1</panel_attributes>
    <additional_attributes>10.0;10.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>550</x>
      <y>415</y>
      <w>45</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=1</panel_attributes>
    <additional_attributes>10.0;10.0;70.0;40.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>530</x>
      <y>415</y>
      <w>95</w>
      <h>85</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=1</panel_attributes>
    <additional_attributes>10.0;10.0;170.0;150.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>515</x>
      <y>415</y>
      <w>15</w>
      <h>75</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=1</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;130.0</additional_attributes>
  </element>
</diagram>
